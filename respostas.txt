Resposta 1:
  SELECT o.fname nome, o.lname AS sobrenome, b.name AS nome_empresa, c.city AS cidade FROM officer AS o INNER JOIN business AS b ON b.cust_id = o.cust_id INNER JOIN customer AS c ON c.cust_id = o.cust_id;
Resposta 2:
  SELECT CONCAT(fname,' ', lname) AS nome FROM individual AS i INNER JOIN customer AS c ON c.cust_id = i.cust_id UNION SELECT b.name AS nome FROM business AS b INNER JOIN customer AS c ON c.cust_id = b.cust_id, branch AS br WHERE br.city <> c.city;
Resposta 4:
  SELECT CONCAT(e.fname, ' ', e.lname) AS funcionario, a.account_id AS id_conta, t.txn_date AS data_transacao FROM employee AS e LEFT OUTER JOIN account AS a ON a.open_emp_id = e.emp_id LEFT OUTER JOIN transaction AS t ON t.account_id = a.account_id ORDER BY funcionario, t.txn_date ASC;
   
Resposta 5 temp:
  SELECT account_id, avail_balance FROM account WHERE account_id > 5 GROUP BY account_id HAVING (avail_balance) > 7000 ORDER BY account_id ASC;
  Consulta retorna identificação de funcionários maiores que 5 (em ordem crescente), agrupando os resultados por este número e exibindo apenas os que tem o balanço disponível maior que 7000.
